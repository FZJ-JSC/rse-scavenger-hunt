name: grade exercise 1

on: 
  workflow_dispatch:
    inputs:
      issue_trig:
        required: true
        type: string
      user:
        required: true
        type: string 

jobs: 

  start_job: 
    runs-on: ubuntu-latest
    steps:
      - name: grade ex1
        id: grading
        run: |
          
          #check if repo with name recipes exist for this user
          found_repo=$(gh repo list "$USER" --json "name" --jq 'any(.[]; .name == "recipes")')
          echo $found_repo
          
          #give correct pass or no if grading went well
          #in this case repo was found
          if $found_repo
          then
            echo "correct=pass" >> "$GITHUB_OUTPUT"
          else
            echo "correct=no" >> "$GITHUB_OUTPUT"
          fi
        env: 
          USER: ${{ inputs.user }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

        #checkout score branch, so that star can be added in case
        #exercise was succesful        
      - uses: actions/checkout@v3
        with:
          ref: score
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: comment on issue if wrong
        if: steps.grading.outputs.correct != 'pass'
        run: |
          echo $ISSUE        
          gh issue comment $ISSUE --body "$BODY"  
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BODY: Please take a look at your answer
          ISSUE: ${{ inputs.issue_trig }}

       #if grading setp was succesfull change the score file and commit it
      - name: change score file
        if: steps.grading.outputs.correct == 'pass'
        run: |
          sed -i '/git:/s/$/:star2: /' score.md

      - uses: EndBug/add-and-commit@v9
        if: steps.grading.outputs.correct == 'pass'
        with:
          default_author: github_actions
          add: 'score.md'
          message: 'update score with git star'
          tag_push: '--set-upstream origin'

      - name: close original issue
        if: steps.grading.outputs.correct == 'pass'
        run: gh issue close $ISSUE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ inputs.issue_trig }}

